@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

:root {
  --whiteTheme: #f5f5f5;
  --darkTheme: rgb(27, 27, 27);
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
img,
picture,
svg,
video {
  display: block;
  max-width: 100%;
}
input,
textarea,
button,
select {
  font: inherit;
}
*:not(dialog) {
  margin: 0;
  padding: 0;
  font: inherit;
}
body {
  background: var(--darkTheme);
  user-select: none;
  color: var(--whiteTheme);
  font-size: clamp(1rem, 1rem + 0.55vw, 1.3rem);
  font-family: "Roboto", sans-serif;
}
h1 h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

p,
li,
figcaption {
  max-width: 65ch;
  text-wrap: pretty;
}
h1 {
  font-size: clamp(1.3rem, 1.5rem + 1.5vw, 2rem);
}
h2 {
  font-size: clamp(1.2rem, 1.25rem + 1vw, 1.7rem);
}

/* =============================== */

.rulesContainer {
  position: absolute;
  max-width: 8em;
  margin: 0.5em;
  pointer-events: none;
  color: rgb(192, 192, 192);
  &:after {
    content: "One tells the truth in both claims. One is lying on both counts. One has a true and a false statement. Determine which wizard possesses the elixir of immortality.";
    transition: opacity 1s;
    opacity: 0;
  }
  &:is(:hover, :focus-visible)::after {
    opacity: 1;
  }
  img {
    float: left;
    height: 2.5em;
    pointer-events: auto;
  }
}
@media (width < 800px) {
  .rulesContainer {
    display: none;
  }
}
main {
  --brighterTrueColor: rgb(0, 255, 0);
  --brighterFalseColor: red;
  --verticalPadding: 1em;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(18em, 100%), 1fr));
  min-height: 100dvb;
  place-content: center;
  place-items: center;
  padding: var(--verticalPadding) calc(var(--verticalPadding) * 2);
  gap: 2em;
}

.claims {
  text-align: center;
  #true {
    color: var(--brighterTrueColor);
  }
  #false {
    color: var(--brighterFalseColor);
  }

  div:has(h1) {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.7em;
    flex-wrap: wrap;
  }

  > div:has(ul) {
    text-align: initial;
    padding: 0.5em 1em;
    margin-block: 1em;
    background-color: #1d1d1d;
    border-radius: 12px;
    box-shadow: 10px 10px 10px #141414;

    h2 {
      margin-block: 0.5em;

      &::before {
        content: url("/assets/wizard.png");
        margin-inline-end: 0.2em;
      }
    }

    li {
      list-style-position: inside;
      list-style-image: url("/assets/elixir.png");
      margin-block: 1em;

      div {
        margin-block-start: 0.2em;
      }
    }
  }

  button:is([type="submit"], [type="reset"]) {
    padding: 0.5em 1em;
    border-radius: 10px;
    outline: none;
    color: inherit;
    font-weight: bold;
    box-shadow: 8px 8px 2px #181818;
    background-image: linear-gradient(
      to right,
      rgb(68, 68, 68),
      rgb(19, 19, 19)
    );
    cursor: pointer;
    margin-block-start: 1em;
    border: 0.05em solid transparent;
    transition: border-color 1s, background-position 3s;
    background-size: 250%;
    background-position: center;

    &:is(:hover, :focus-visible) {
      border-color: #064f8b;
      background-position: right 0%;
    }
    &[type="reset"]:is(:hover, :focus-visible) {
      border-color: #dd236b;
    }
  }

  div:has(button) {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    column-gap: 6em;
  }
}

.options {
  font-size: clamp(1.1rem, 1.15rem + 0.7vw, 1.45rem);
  width: min(17em, 100%);
  text-align: center;
  div {
    color: rgb(238, 56, 110);
    background: rgb(49, 49, 49);
    padding-block: 0.75em;
    box-shadow: 5px 5px 5px #131313;
    border: 1px solid transparent;
    transition: border-color 0.5s, color 0.5s;
    border-radius: 15px;
    &:first-of-type {
      margin-block-end: 1em;
      color: rgb(28, 201, 28);

      &:hover {
        color: var(--brighterTrueColor);
      }
    }
    &:nth-of-type(2):hover {
      color: var(--brighterFalseColor);
    }
    &:hover {
      border-color: #646cff;
    }
  }
}

.result {
  margin-block-start: 1.5em;
  &.error {
    color: rgb(223, 55, 119);
  }
  &.success {
    color: var(--brighterTrueColor);
  }
}
